    // std::vector<Page> page;
    
    // pages[0].addArticle(Article("Top 3 Frameworks for Web Applications",
    // "Web Application Framework or simply web framework is a software framework that is designed to support the development of web applications including web services, web resources, and web APIs. Frameworks are, in short, libraries that help you develop your application faster and smarter! Nowadays, the number of Web Frameworks has increased greatly. To help you pick up the most suitable one for your Web Application, we have compiled a list of 10 best frameworks available online, in your preferred language.\n"
    // "1. Ruby on Rails : Ruby on Rails is an extremely productive web application framework written by David Heinemeier Hansson. One can develop an application at least ten times faster with Rails than a typical Java framework. Moreover, Rails includes everything needed to create a database-driven web application, using the Model-View-Controller pattern.\n"
    // "Language: Ruby\n"
    // "Latest Version: Rails 5.0.0.beta2\n"
    // "Framework Link: http://rubyonrails.org\n"
    // "Github Link: https://github.com/rails/rails\n"
    // "Websites using Ruby on Rails are GroupOn, UrbanDictionary, AirBnb, Shopify, Github\n"
    // "2. Django :Django is another framework that helps in building quality web applications. It was invented to meet fast-moving newsroom deadlines while satisfying the tough requirements of experienced Web developers. Django developers say the applications are ridiculously fast, secure, scalable, and versatile.\n"
    // "Language: Python\n"
    // "Latest Version: Django 1.9.2\n"
    // "Framework Link: https://www.djangoproject.com\n"
    // "Github Link: https://github.com/django/django\n"
    // "Websites using Django are Disqus, Pinterest, Instagram, Quora, etc.\n"
    // "3. Angular(Also, know as Angular JS) :Angular is a framework by Google (originally developed by Misko Hevery and Adam Abrons) which helps us in building powerful Web Apps. It is a framework to build large scale and high-performance web applications while keeping them as easy-to-maintain. There are a huge number of web apps that are built with Angular.\n"
    // "Language: JavaScript\n"
    // "Latest Version: Angular 7.1.5\n"
    // "Framework Link: https://angular.io/\n"
    // "Github Link: https://github.com/angular/angular\n"
    // "Websites using Angular are Youtube on PS3, Weather, Netflix, etc.\n"));
    // page.addArticle(Article("Why Learn Front-End Development?",
    // "Front-end developers are the highest-paid professionals and use their talent in order to design easy, appealing, and user-friendly websites. It is a mixture of many things including interface, text, image, and animation and the front-end developer uses these elements and presents the complete result in front of the end user.\n"
    // "Front-End Developers deal with the design and layout aspects of the websites whereas back-end developers are primarily responsible for server-side tasks such as API integration, website functioning, etc.\n"
    // "So, if you have an interest in any of these aspects then you can definitely choose front-end development as your career.\n"
    // "Below is the list of some best books to learn frontend development or web designing. These books are good for both entry-level and experienced developers. We have categorized these books into two sections- for beginners and for experienced. One thing you need to keep in mind is that in programming you need to keep updated yourself but basics concepts always remain the same and they should have a strong command of basics concepts first before moving on to the advanced level.\n"));
    // page.addArticle(Article("What is a Responsive Website?", "A responsive website, simply improves the viewing experience; it fits into any device irrespective of resolution. It means a responsive website virtually fits into any device that uses a web browser. Other than being compatible with a unique variety of resolutions, a responsive website works flawlessly across a range of devices, including smartphones, tablets and smartphones."));
    // page.addArticle(Article("What is Memory Leak?", "Memory leak occurs when programmers create a memory in a heap and forget to delete it.\n"
    // "The consequence of the memory leak is that it reduces the performance of the computer by reducing the amount of available memory. Eventually, in the worst case, too much of the available memory may become allocated and all or part of the system or device stops working correctly, the application fails, or the system slows down vastly.\n"
    // "Memory leaks are particularly serious issues for programs like daemons and servers which by definition never terminate."));
    // page.addArticle(Article("What is malloc ?", "The “malloc” or “memory allocation” method in C is used to dynamically allocate a single large block of memory with the specified size. It returns a pointer of type void which can be cast into a pointer of any form. It doesn’t Initialize memory at execution time so that it has initialized each block with the default garbage value initially."));
    // page.addArticle(Article("what is linux kernel ?", "Linux Kernel is the heart of Linux operating systems. It is an open-source (source code that can be used by anyone freely) software that is most popular and widely used in the industry as well as on a personal use basis. Who created Linux and why? Linux was created by Linus Torvalds in 1991 as a hobby project. Since then, many of the users have contributed to its growth and development of it. Before Jumping directly to the main topic “Linux Kernel” one must know a few concepts (prerequisites) to better understand the Linux Kernel."));
    // page.addArticle(Article("How Linux Kernel Boots?", "Many processes are running in the background when we press the system’s power button. It is very important to learn the booting process to understand the working of any operating system. Knowing how the kernel boots is a must to solve the booting error. It is a very interesting topic to learn, let us start with the basics. A simplified read of the boot method is given below:\n"
    // "Stages of Linux Boot Process:\n"
    // "1. The machine’s BIOS (Basic Input/Output System) or boot microcode initializes and runs a boot loader.\n"
    // "2. Boot loader finds the kernel image on the disk and loads it into memory to start the system.\n"
    // "3. The kernel initializes the devices and their drivers.\n"
    // "4. The kernel mounts the basic filesystem.\n"
    // "5. The kernel starts a program referred to as init with a method ID zero.\n"
    // "6. init sets the remainder of the system processes in motion.\n"
    // "7. For some purpose, init starts a method permitting you to log in, typically at the top or close to the top of the boot sequence."));
    // page.addArticle(Article("What are some use cases of Mathematical Algorithms?", "C is a very useful topic for solving problems of computer science and also has vast applications in competitive programming. Some of them are mentioned below:\n"
    // "1. Problem-Solving: It is mostly used in solving complex mathematical ideas in mathematics and computer science.\n"
    // "2. Competitive Programming: Algorithms like Sieve of Eratosthenes, Euclid algorithm, Binary exponentiation are some of the most common topics used in competitive programming.\n"
    // "3. Recurrence relation: A lot of problems in DSA require the usage of recursion. Using the knowledge of mathematics several recurrence relations can be turned into mathematical formulae which makes solving the problem quite an easy task.\n"
    // "4. Heavy calculation: Problems containing complex mathematical concepts and heavy calculations are easily done in comparatively less time using these algorithms instead of manual calculations.\n"
    // "5. Statistics: Mathematical algorithms are also important for data processing, i.e., for converting raw data into useful information and also for analyzing them."));
    // page.addArticle(Article("What is Python?", "Python is a high-level, general-purpose, and very popular programming language. Python programming language (latest Python 3) is being used in web development, Machine Learning applications, along with all cutting-edge technology in the Software Industry.\n"
    // "Python language is being used by almost all tech-giant companies like Google, Amazon, Facebook, Instagram, Dropbox, Uber, etc.\n"
    // "The biggest strength of Python is its huge collection of standard libraries which can be used for various purposes including:\n"
    // "- Machine Learning\n"
    // "- GUI Applications (like Kivy, Tkinter, PyQt, etc.)\n"
    // "- Web frameworks like Django (used by YouTube, Instagram, Dropbox)\n"
    // "- Image processing (like OpenCV, Pillow)\n"
    // "- Web scraping (like Scrapy, BeautifulSoup, Selenium)\n"
    // "- Test frameworks\n"
    // "- Multimedia\n"
    // "- Scientific computing\n"
    // "- Text processing and many more..."));
    // page.addArticle(Article("Why Learn C++?", "C++ is one of the most used and popular programming languages.\n"
    // "C++ is used in making operating systems, embedded systems, and Graphical User Interfaces.\n"
    // "It is an object-oriented programming language that implements all the OOPs concepts such as Abstraction, Encapsulation, and Inheritance, which gives a clear structure to programs and allows code to be reused, lowering development costs and providing security.\n"
    // "It is portable and can be used to create applications that can be adapted to multiple platforms.\n"
    // "C++ is easy to learn so that you can choose it as your first programming language.\n"
    // "It makes programming easy for programmers to switch to C++ because its syntax is similar to C, Java, and C#."));
    // page.addArticle(Article("What is Array Decay? ", "The loss of type and dimensions of an array is known as decay of an array.This generally occurs when we pass the array into function by value or pointer. What it does is, it sends first address to the array which is a pointer, hence the size of array is not the original one, but the one occupied by the pointer in the memory."));
    // page.addArticle(Article("Why C++ is a partially Object Oriented Language?", "The basic things which are the essential features of an object-oriented programming are Inheritance, Polymorphism, and Encapsulation. Any programming language that supports these features completely is a complete Object-oriented programming language, whereas any language that supports all three features but does not support all features completely is a Partial Object-oriented programming language.\n"
    // "Inheritance is used to provide the concept of code reusability. Polymorphism makes a language able to perform different tasks at different instances.\n"
    // "Encapsulation makes data abstraction (security or privacy to data) possible. In object-oriented programming language, Encapsulation is achieved with the help of a class. Here are the reasons C++ is called a partial or semi Object-Oriented Language:\n"
    // "1. Main function is outside the class: C++ supports object-oriented programming, but OO is not intrinsic to the language. You can write a valid, well-coded, excellently-styled C++ program without using an object even once.\n"
    // "2. In C++, the main function is mandatory, which executes first but it resides outside the class and from there we create objects. So, here the creation of class becomes optional, and we can write code without using a class. While in JAVA, the main function is executed first and it resides in the class which is mandatory. So, we can’t do anything without making a Class. For doing the same thing as above, we need to make a class.\n"
    // "3. Concept of Global variable: In C++, we can declare a variable globally, which can be accessible from anywhere and hence, it does not provide complete privacy to the data as no one can be restricted to access and modify that data. So, it provides encapsulation partially, whereas in JAVA, we can declare a variable inside the class only and we can provide an access specifier to it."));
    // page.addArticle(Article("Can Static Functions Be Virtual in C++?", "In C++, a static member function of a class cannot be virtual. Virtual functions are invoked when you have a pointer or reference to an instance of a class. Static functions aren’t tied to the instance of a class but they are tied to the class. C++ doesn’t have pointers-to-class, so there is no scenario in which you could invoke a static function virtually."));
//    this->addArticleToPage(Article("2\r\n", "2\r\n"));
//    this->addArticleToPage(Article("title1\r\n", "conntent 1\r\n"));